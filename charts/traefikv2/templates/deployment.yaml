apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "traefikv2.fullname" . }}
  labels:
{{ include "traefikv2.labels" . | indent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}

spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "traefikv2.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "traefikv2.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "traefikv2.fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: web
              containerPort: 80
              hostPort: 80
            - name: websecure
              containerPort: 443
              hostPort: 443
            {{- if .Values.dashboard.enabled }}
            - name: admin
              containerPort: 8080
            {{- end }}
          readinessProbe:
            httpGet:
              path: /ping
              port: 8080
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              path: /ping
              port: 8080
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          env:
          {{- range $k, $v := (index .Values.acme.dnsProvider .Values.acme.dnsProvider.name) }}
            {{- if or $v $.Values.acme.dnsProvider.existingSecretName }}
            - name: {{ $k }}
              valueFrom:
                secretKeyRef:
                {{- if $.Values.acme.dnsProvider.existingSecretName }}
                  name: {{ $.Values.acme.dnsProvider.existingSecretName }}
                {{- else }}
                  name: {{ template "traefikv2.fullname" $ }}-dnsprovider-config
                {{- end }}
                  key: {{ $k }}
            {{- end }}
          {{- end }}
          {{- if .Values.env }}
            {{ toYaml .Values.env | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/traefik
            - name: acme
              mountPath: /acme
      volumes:
      - name: config-volume
        configMap:
          name: traefik-config
      {{- if .Values.acme.enabled }}
      - name: acme
        {{- if .Values.acme.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.acme.persistence.existingClaim | default (printf "%s-acme" (include "traefikv2.fullname" .)) }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      {{- end }}