resource rancher2_catalog nginxinc {
  name        = "nginxinc"
  scope       = "cluster"
  cluster_id  = data.terraform_remote_state.cluster.outputs.cluster_id
  url         = "https://helm.nginx.com/stable"
}

resource rancher2_namespace nginxinc {
  name       = "nginxinc"
  project_id = data.rancher2_project.system.id
}

data template_file nginxinc_values {
  template = file("${path.module}/templates/nginxinc_values.yaml.tpl")
  vars = {
    default_tls_secret = "${rancher2_namespace.nginxinc.name}/${rancher2_certificate.nginxinc_tls.name}"
  }
}

resource rancher2_app nginxinc {
  name             = "nginx-ingress"
  template_name    = "nginx-ingress"
  catalog_name     = "${data.terraform_remote_state.cluster.outputs.cluster_id}:${rancher2_catalog.nginxinc.name}"
  project_id       = data.rancher2_project.system.id
  target_namespace = rancher2_namespace.nginxinc.name
  values_yaml      = base64encode(data.template_file.nginxinc_values.rendered)
}

data kubernetes_service nginxinc {
  metadata {
    name = "nginx-ingress"
    namespace = rancher2_namespace.nginxinc.name
  }

  depends_on = [rancher2_app.nginxinc]
}

resource rancher2_certificate nginxinc_tls {
  name         = "ingress-default-tls"
  namespace_id = rancher2_namespace.nginxinc.id
  project_id   = data.rancher2_project.system.id
  certs        = base64encode(acme_certificate.ingress_tls.certificate_pem)
  key          = base64encode(tls_private_key.ingress_tls.private_key_pem)
}

resource dns_a_record_set nginxinc_ingress {
  zone      = "${var.ingress_domain}."
  name      = var.nginxinc_ingress_hostname
  addresses = data.kubernetes_service.nginxinc.load_balancer_ingress.*.ip
  ttl       = 60
}
